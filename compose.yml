services:
  api:
    image: ghcr.io/aartoni/sixdegreesofapi:main
    container_name: api
    depends_on:
      - db
    environment:
      - RUST_LOG=${API_LOG_LEVEL}
      - PORT=${API_PORT}
    ports:
      - "${API_PORT}:${API_PORT}"
    restart: "unless-stopped"
  db:
    image: neo4j:5.26.0-community-bullseye
    container_name: db
    environment:
      - NEO4J_AUTH_FILE
      - NEO4J_initial_dbms_default__database
      - NEO4J_server_memory_heap_initial__size
      - NEO4J_server_memory_heap_max__size
    ports:
      - "7474:7474"
      - "7687:7687"
    restart: "unless-stopped"
    secrets:
      - neo4j_pass
    volumes:
      - ./data/neo4j:/data
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - api
    ports:
      - 8080:8080
    restart: "unless-stopped"
  proxy:
    image: nginx:1.27-alpine
    container_name: proxy
    hostname: ${DOMAIN}
    depends_on:
      - frontend
    environment:
      - DOMAIN
      - API_DOMAIN
      - TZ
    ports:
      - "80:80"
      - "443:443"
    restart: "unless-stopped"
    volumes:
      - './data/certs/fullchain.pem:/config/keys/cert.crt:ro'
      - './data/certs/serverkey.pem:/config/keys/cert.key:ro'
      - './config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro'
      - './config/nginx/snippets:/etc/nginx/snippets:ro'
      - './config/nginx/static:/usr/share/nginx/html:ro'
      - './config/nginx/templates:/etc/nginx/templates:ro'

secrets:
  neo4j_pass:
    file: ./secrets/neo4j.txt
